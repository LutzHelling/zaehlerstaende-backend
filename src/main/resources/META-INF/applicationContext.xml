<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd    
	http://www.springframework.org/schema/context     http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd       
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd   
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/mvc	http://www.springframework.org/schema/mvc/spring-mvc.xsd        
	http://www.springframework.org/schema/security	http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<context:annotation-config />

	<context:property-placeholder location="classpath:config/application.properties" />
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<jpa:repositories base-package="com.online.helling.zaehler.dataaccess" />

	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="zaehler" />
			</set>
		</property>
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.online.helling.zaehler" />
		<property name="jpaProperties">
			<props>
				<!-- Configures the used database dialect. This allows Hibernate to create SQL that is optimized for the used database. -->
				<prop key="hibernate.dialect">${spring.jpa.properties.hibernate.dialect}</prop>

				<!-- Configures the naming strategy that is used when Hibernate creates new database objects and schema elements -->
				<prop key="hibernate.implicit_naming_strategy">${spring.jpa.properties.hibernate.implicit_naming_strategy}</prop>
				<prop key="hibernate.physical_naming_strategy">${spring.jpa.properties.hibernate.physical_naming_strategy}</prop>

				<!-- If the value of this property is true, Hibernate writes all SQL statements to the console. -->
				<prop key="hibernate.show_sql">${spring.jpa.properties.hibernate.show_sql}</prop>

				<!-- If the value of this property is true, Hibernate will use prettyprint when it writes SQL to the console. -->
				<prop key="hibernate.format_sql">${spring.jpa.properties.hibernate.format_sql}</prop>
			</props>
		</property>
		<property name="persistenceUnitName" value="zaehler_pu" />
	</bean>

	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.MySQL55Dialect"></property>
		<property name="showSql" value="${spring.jpa.properties.hibernate.show_sql}"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${spring.datasource.driver-class-name}" />
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />
	<context:component-scan base-package="com.online.helling.zaehler, com.giffing.wicket.spring.boot.context.security"></context:component-scan>

	<bean id="zaehlerAccess" class="com.online.helling.zaehler.dataaccess.ZaehlerAccess" />
</beans>
